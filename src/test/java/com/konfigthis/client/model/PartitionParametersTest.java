/*
 * Unstructured Pipeline API
 * At Unstructured, we're on a mission to give organizations access to all of their data. We know the world runs on documentsâ€”from research reports and memos, to quarterly filings and plans of action, documents are the unit of information that companies depend on. And yet, 80% of this information is trapped in inaccessible formats, and businesses have long struggled to unlock this data, leading to information silos, inefficient decision-making, and repetitive work. Until now.  Unstructured captures this unstructured data wherever it lives and transforms it into AI-friendly JSON files for companies who are eager to fold AI into their business.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PartitionParameters
 */
public class PartitionParametersTest {
    private final PartitionParameters model = new PartitionParameters();

    /**
     * Model tests for PartitionParameters
     */
    @Test
    public void testPartitionParameters() {
        // TODO: test PartitionParameters
    }

    /**
     * Test the property 'files'
     */
    @Test
    public void filesTest() {
        // TODO: test files
    }

    /**
     * Test the property 'strategy'
     */
    @Test
    public void strategyTest() {
        // TODO: test strategy
    }

    /**
     * Test the property 'gzUncompressedContentType'
     */
    @Test
    public void gzUncompressedContentTypeTest() {
        // TODO: test gzUncompressedContentType
    }

    /**
     * Test the property 'outputFormat'
     */
    @Test
    public void outputFormatTest() {
        // TODO: test outputFormat
    }

    /**
     * Test the property 'coordinates'
     */
    @Test
    public void coordinatesTest() {
        // TODO: test coordinates
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'hiResModelName'
     */
    @Test
    public void hiResModelNameTest() {
        // TODO: test hiResModelName
    }

    /**
     * Test the property 'includePageBreaks'
     */
    @Test
    public void includePageBreaksTest() {
        // TODO: test includePageBreaks
    }

    /**
     * Test the property 'languages'
     */
    @Test
    public void languagesTest() {
        // TODO: test languages
    }

    /**
     * Test the property 'pdfInferTableStructure'
     */
    @Test
    public void pdfInferTableStructureTest() {
        // TODO: test pdfInferTableStructure
    }

    /**
     * Test the property 'skipInferTableTypes'
     */
    @Test
    public void skipInferTableTypesTest() {
        // TODO: test skipInferTableTypes
    }

    /**
     * Test the property 'xmlKeepTags'
     */
    @Test
    public void xmlKeepTagsTest() {
        // TODO: test xmlKeepTags
    }

    /**
     * Test the property 'chunkingStrategy'
     */
    @Test
    public void chunkingStrategyTest() {
        // TODO: test chunkingStrategy
    }

    /**
     * Test the property 'multipageSections'
     */
    @Test
    public void multipageSectionsTest() {
        // TODO: test multipageSections
    }

    /**
     * Test the property 'combineUnderNChars'
     */
    @Test
    public void combineUnderNCharsTest() {
        // TODO: test combineUnderNChars
    }

    /**
     * Test the property 'newAfterNChars'
     */
    @Test
    public void newAfterNCharsTest() {
        // TODO: test newAfterNChars
    }

    /**
     * Test the property 'maxCharacters'
     */
    @Test
    public void maxCharactersTest() {
        // TODO: test maxCharacters
    }

    /**
     * Test the property 'overlap'
     */
    @Test
    public void overlapTest() {
        // TODO: test overlap
    }

    /**
     * Test the property 'overlapAll'
     */
    @Test
    public void overlapAllTest() {
        // TODO: test overlapAll
    }

    /**
     * Test the property 'extractImageBlockTypes'
     */
    @Test
    public void extractImageBlockTypesTest() {
        // TODO: test extractImageBlockTypes
    }

}
